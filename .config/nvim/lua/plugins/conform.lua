return {
  "conform.nvim",
  -- opts = function()
  --   ---@type conform.setupOpts
  --   local opts = {
  --     formatters_by_ft = {
  --       vue = { "eslint_d" },
  --     },
  --     -- The options you set here will be merged with the builtin formatters.
  --     -- You can also define any custom formatters here.
  --     ------@type table<string, conform.FormatterConfigOverride|fun(bufnr: integer): nil|conform.FormatterConfigOverride>
  --     formatters = {
  --       ---  injected = { options = { ignore_errors = true } },
  --       ---  -- # Example of using dprint only when a dprint.json file is present
  --       ---  -- dprint = {
  --       ---  --   condition = function(ctx)
  --       ---  --     return vim.fs.find({ "dprint.json" }, { path = ctx.filename, upward = true })[1]
  --       ---  --   end,
  --       ---  -- },
  --       ---  --
  --       ---  -- # Example of using shfmt with extra args
  --       ---  -- shfmt = {
  --       ---  --   prepend_args = { "-i", "2", "-ci" },
  --       ---  -- },
  --       eslint_d = {
  --         command = "eslint_d",
  --         args = { "--fix-to-stdout", "--stdin", "--stdin-filename", "$FILENAME" },
  --         stdin = true,
  --       },
  --     },
  --   }
  --   return opts
  -- end,
}
